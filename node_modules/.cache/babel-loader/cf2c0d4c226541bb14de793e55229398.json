{"ast":null,"code":"'use strict';\n\nlet {\n  SourceMapConsumer,\n  SourceMapGenerator\n} = require('source-map-js');\nlet {\n  dirname,\n  resolve,\n  relative,\n  sep\n} = require('path');\nlet {\n  pathToFileURL\n} = require('url');\nlet Input = require('./input');\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator);\nlet pathAvailable = Boolean(dirname && resolve && relative && sep);\nclass MapGenerator {\n  constructor(stringify, root, opts, cssString) {\n    this.stringify = stringify;\n    this.mapOpts = opts.map || {};\n    this.root = root;\n    this.opts = opts;\n    this.css = cssString;\n  }\n  isMap() {\n    if (typeof this.opts.map !== 'undefined') {\n      return !!this.opts.map;\n    }\n    return this.previous().length > 0;\n  }\n  previous() {\n    if (!this.previousMaps) {\n      this.previousMaps = [];\n      if (this.root) {\n        this.root.walk(node => {\n          if (node.source && node.source.input.map) {\n            let map = node.source.input.map;\n            if (!this.previousMaps.includes(map)) {\n              this.previousMaps.push(map);\n            }\n          }\n        });\n      } else {\n        let input = new Input(this.css, this.opts);\n        if (input.map) this.previousMaps.push(input.map);\n      }\n    }\n    return this.previousMaps;\n  }\n  isInline() {\n    if (typeof this.mapOpts.inline !== 'undefined') {\n      return this.mapOpts.inline;\n    }\n    let annotation = this.mapOpts.annotation;\n    if (typeof annotation !== 'undefined' && annotation !== true) {\n      return false;\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.inline);\n    }\n    return true;\n  }\n  isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n      return this.mapOpts.sourcesContent;\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.withContent());\n    }\n    return true;\n  }\n  clearAnnotation() {\n    if (this.mapOpts.annotation === false) return;\n    if (this.root) {\n      let node;\n      for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n        node = this.root.nodes[i];\n        if (node.type !== 'comment') continue;\n        if (node.text.indexOf('# sourceMappingURL=') === 0) {\n          this.root.removeChild(i);\n        }\n      }\n    } else if (this.css) {\n      this.css = this.css.replace(/(\\n)?\\/\\*#[\\S\\s]*?\\*\\/$/gm, '');\n    }\n  }\n  setSourcesContent() {\n    let already = {};\n    if (this.root) {\n      this.root.walk(node => {\n        if (node.source) {\n          let from = node.source.input.from;\n          if (from && !already[from]) {\n            already[from] = true;\n            this.map.setSourceContent(this.toUrl(this.path(from)), node.source.input.css);\n          }\n        }\n      });\n    } else if (this.css) {\n      let from = this.opts.from ? this.toUrl(this.path(this.opts.from)) : '<no source>';\n      this.map.setSourceContent(from, this.css);\n    }\n  }\n  applyPrevMaps() {\n    for (let prev of this.previous()) {\n      let from = this.toUrl(this.path(prev.file));\n      let root = prev.root || dirname(prev.file);\n      let map;\n      if (this.mapOpts.sourcesContent === false) {\n        map = new SourceMapConsumer(prev.text);\n        if (map.sourcesContent) {\n          map.sourcesContent = map.sourcesContent.map(() => null);\n        }\n      } else {\n        map = prev.consumer();\n      }\n      this.map.applySourceMap(map, from, this.toUrl(this.path(root)));\n    }\n  }\n  isAnnotation() {\n    if (this.isInline()) {\n      return true;\n    }\n    if (typeof this.mapOpts.annotation !== 'undefined') {\n      return this.mapOpts.annotation;\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.annotation);\n    }\n    return true;\n  }\n  toBase64(str) {\n    if (Buffer) {\n      return Buffer.from(str).toString('base64');\n    } else {\n      return window.btoa(unescape(encodeURIComponent(str)));\n    }\n  }\n  addAnnotation() {\n    let content;\n    if (this.isInline()) {\n      content = 'data:application/json;base64,' + this.toBase64(this.map.toString());\n    } else if (typeof this.mapOpts.annotation === 'string') {\n      content = this.mapOpts.annotation;\n    } else if (typeof this.mapOpts.annotation === 'function') {\n      content = this.mapOpts.annotation(this.opts.to, this.root);\n    } else {\n      content = this.outputFile() + '.map';\n    }\n    let eol = '\\n';\n    if (this.css.includes('\\r\\n')) eol = '\\r\\n';\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */';\n  }\n  outputFile() {\n    if (this.opts.to) {\n      return this.path(this.opts.to);\n    } else if (this.opts.from) {\n      return this.path(this.opts.from);\n    } else {\n      return 'to.css';\n    }\n  }\n  generateMap() {\n    if (this.root) {\n      this.generateString();\n    } else if (this.previous().length === 1) {\n      let prev = this.previous()[0].consumer();\n      prev.file = this.outputFile();\n      this.map = SourceMapGenerator.fromSourceMap(prev);\n    } else {\n      this.map = new SourceMapGenerator({\n        file: this.outputFile()\n      });\n      this.map.addMapping({\n        source: this.opts.from ? this.toUrl(this.path(this.opts.from)) : '<no source>',\n        generated: {\n          line: 1,\n          column: 0\n        },\n        original: {\n          line: 1,\n          column: 0\n        }\n      });\n    }\n    if (this.isSourcesContent()) this.setSourcesContent();\n    if (this.root && this.previous().length > 0) this.applyPrevMaps();\n    if (this.isAnnotation()) this.addAnnotation();\n    if (this.isInline()) {\n      return [this.css];\n    } else {\n      return [this.css, this.map];\n    }\n  }\n  path(file) {\n    if (file.indexOf('<') === 0) return file;\n    if (/^\\w+:\\/\\//.test(file)) return file;\n    if (this.mapOpts.absolute) return file;\n    let from = this.opts.to ? dirname(this.opts.to) : '.';\n    if (typeof this.mapOpts.annotation === 'string') {\n      from = dirname(resolve(from, this.mapOpts.annotation));\n    }\n    file = relative(from, file);\n    return file;\n  }\n  toUrl(path) {\n    if (sep === '\\\\') {\n      path = path.replace(/\\\\/g, '/');\n    }\n    return encodeURI(path).replace(/[#?]/g, encodeURIComponent);\n  }\n  sourcePath(node) {\n    if (this.mapOpts.from) {\n      return this.toUrl(this.mapOpts.from);\n    } else if (this.mapOpts.absolute) {\n      if (pathToFileURL) {\n        return pathToFileURL(node.source.input.from).toString();\n      } else {\n        throw new Error('`map.absolute` option is not available in this PostCSS build');\n      }\n    } else {\n      return this.toUrl(this.path(node.source.input.from));\n    }\n  }\n  generateString() {\n    this.css = '';\n    this.map = new SourceMapGenerator({\n      file: this.outputFile()\n    });\n    let line = 1;\n    let column = 1;\n    let noSource = '<no source>';\n    let mapping = {\n      source: '',\n      generated: {\n        line: 0,\n        column: 0\n      },\n      original: {\n        line: 0,\n        column: 0\n      }\n    };\n    let lines, last;\n    this.stringify(this.root, (str, node, type) => {\n      this.css += str;\n      if (node && type !== 'end') {\n        mapping.generated.line = line;\n        mapping.generated.column = column - 1;\n        if (node.source && node.source.start) {\n          mapping.source = this.sourcePath(node);\n          mapping.original.line = node.source.start.line;\n          mapping.original.column = node.source.start.column - 1;\n          this.map.addMapping(mapping);\n        } else {\n          mapping.source = noSource;\n          mapping.original.line = 1;\n          mapping.original.column = 0;\n          this.map.addMapping(mapping);\n        }\n      }\n      lines = str.match(/\\n/g);\n      if (lines) {\n        line += lines.length;\n        last = str.lastIndexOf('\\n');\n        column = str.length - last;\n      } else {\n        column += str.length;\n      }\n      if (node && type !== 'start') {\n        let p = node.parent || {\n          raws: {}\n        };\n        if (node.type !== 'decl' || node !== p.last || p.raws.semicolon) {\n          if (node.source && node.source.end) {\n            mapping.source = this.sourcePath(node);\n            mapping.original.line = node.source.end.line;\n            mapping.original.column = node.source.end.column - 1;\n            mapping.generated.line = line;\n            mapping.generated.column = column - 2;\n            this.map.addMapping(mapping);\n          } else {\n            mapping.source = noSource;\n            mapping.original.line = 1;\n            mapping.original.column = 0;\n            mapping.generated.line = line;\n            mapping.generated.column = column - 1;\n            this.map.addMapping(mapping);\n          }\n        }\n      }\n    });\n  }\n  generate() {\n    this.clearAnnotation();\n    if (pathAvailable && sourceMapAvailable && this.isMap()) {\n      return this.generateMap();\n    } else {\n      let result = '';\n      this.stringify(this.root, i => {\n        result += i;\n      });\n      return [result];\n    }\n  }\n}\nmodule.exports = MapGenerator;","map":{"version":3,"names":["SourceMapConsumer","SourceMapGenerator","require","dirname","resolve","relative","sep","pathToFileURL","Input","sourceMapAvailable","Boolean","pathAvailable","MapGenerator","constructor","stringify","root","opts","cssString","mapOpts","map","css","isMap","previous","length","previousMaps","walk","node","source","input","includes","push","isInline","inline","annotation","some","i","isSourcesContent","sourcesContent","withContent","clearAnnotation","nodes","type","text","indexOf","removeChild","replace","setSourcesContent","already","from","setSourceContent","toUrl","path","applyPrevMaps","prev","file","consumer","applySourceMap","isAnnotation","toBase64","str","Buffer","toString","window","btoa","unescape","encodeURIComponent","addAnnotation","content","to","outputFile","eol","generateMap","generateString","fromSourceMap","addMapping","generated","line","column","original","test","absolute","encodeURI","sourcePath","Error","noSource","mapping","lines","last","start","match","lastIndexOf","p","parent","raws","semicolon","end","generate","result","module","exports"],"sources":["D:/IT-incubator/HTML_CSS_fore_React/my_portfolio/GIT/node_modules/postcss/lib/map-generator.js"],"sourcesContent":["'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { dirname, resolve, relative, sep } = require('path')\nlet { pathToFileURL } = require('url')\n\nlet Input = require('./input')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(dirname && resolve && relative && sep)\n\nclass MapGenerator {\n  constructor(stringify, root, opts, cssString) {\n    this.stringify = stringify\n    this.mapOpts = opts.map || {}\n    this.root = root\n    this.opts = opts\n    this.css = cssString\n  }\n\n  isMap() {\n    if (typeof this.opts.map !== 'undefined') {\n      return !!this.opts.map\n    }\n    return this.previous().length > 0\n  }\n\n  previous() {\n    if (!this.previousMaps) {\n      this.previousMaps = []\n      if (this.root) {\n        this.root.walk(node => {\n          if (node.source && node.source.input.map) {\n            let map = node.source.input.map\n            if (!this.previousMaps.includes(map)) {\n              this.previousMaps.push(map)\n            }\n          }\n        })\n      } else {\n        let input = new Input(this.css, this.opts)\n        if (input.map) this.previousMaps.push(input.map)\n      }\n    }\n\n    return this.previousMaps\n  }\n\n  isInline() {\n    if (typeof this.mapOpts.inline !== 'undefined') {\n      return this.mapOpts.inline\n    }\n\n    let annotation = this.mapOpts.annotation\n    if (typeof annotation !== 'undefined' && annotation !== true) {\n      return false\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(i => i.inline)\n    }\n    return true\n  }\n\n  isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n      return this.mapOpts.sourcesContent\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.withContent())\n    }\n    return true\n  }\n\n  clearAnnotation() {\n    if (this.mapOpts.annotation === false) return\n\n    if (this.root) {\n      let node\n      for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n        node = this.root.nodes[i]\n        if (node.type !== 'comment') continue\n        if (node.text.indexOf('# sourceMappingURL=') === 0) {\n          this.root.removeChild(i)\n        }\n      }\n    } else if (this.css) {\n      this.css = this.css.replace(/(\\n)?\\/\\*#[\\S\\s]*?\\*\\/$/gm, '')\n    }\n  }\n\n  setSourcesContent() {\n    let already = {}\n    if (this.root) {\n      this.root.walk(node => {\n        if (node.source) {\n          let from = node.source.input.from\n          if (from && !already[from]) {\n            already[from] = true\n            this.map.setSourceContent(\n              this.toUrl(this.path(from)),\n              node.source.input.css\n            )\n          }\n        }\n      })\n    } else if (this.css) {\n      let from = this.opts.from\n        ? this.toUrl(this.path(this.opts.from))\n        : '<no source>'\n      this.map.setSourceContent(from, this.css)\n    }\n  }\n\n  applyPrevMaps() {\n    for (let prev of this.previous()) {\n      let from = this.toUrl(this.path(prev.file))\n      let root = prev.root || dirname(prev.file)\n      let map\n\n      if (this.mapOpts.sourcesContent === false) {\n        map = new SourceMapConsumer(prev.text)\n        if (map.sourcesContent) {\n          map.sourcesContent = map.sourcesContent.map(() => null)\n        }\n      } else {\n        map = prev.consumer()\n      }\n\n      this.map.applySourceMap(map, from, this.toUrl(this.path(root)))\n    }\n  }\n\n  isAnnotation() {\n    if (this.isInline()) {\n      return true\n    }\n    if (typeof this.mapOpts.annotation !== 'undefined') {\n      return this.mapOpts.annotation\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.annotation)\n    }\n    return true\n  }\n\n  toBase64(str) {\n    if (Buffer) {\n      return Buffer.from(str).toString('base64')\n    } else {\n      return window.btoa(unescape(encodeURIComponent(str)))\n    }\n  }\n\n  addAnnotation() {\n    let content\n\n    if (this.isInline()) {\n      content =\n        'data:application/json;base64,' + this.toBase64(this.map.toString())\n    } else if (typeof this.mapOpts.annotation === 'string') {\n      content = this.mapOpts.annotation\n    } else if (typeof this.mapOpts.annotation === 'function') {\n      content = this.mapOpts.annotation(this.opts.to, this.root)\n    } else {\n      content = this.outputFile() + '.map'\n    }\n    let eol = '\\n'\n    if (this.css.includes('\\r\\n')) eol = '\\r\\n'\n\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */'\n  }\n\n  outputFile() {\n    if (this.opts.to) {\n      return this.path(this.opts.to)\n    } else if (this.opts.from) {\n      return this.path(this.opts.from)\n    } else {\n      return 'to.css'\n    }\n  }\n\n  generateMap() {\n    if (this.root) {\n      this.generateString()\n    } else if (this.previous().length === 1) {\n      let prev = this.previous()[0].consumer()\n      prev.file = this.outputFile()\n      this.map = SourceMapGenerator.fromSourceMap(prev)\n    } else {\n      this.map = new SourceMapGenerator({ file: this.outputFile() })\n      this.map.addMapping({\n        source: this.opts.from\n          ? this.toUrl(this.path(this.opts.from))\n          : '<no source>',\n        generated: { line: 1, column: 0 },\n        original: { line: 1, column: 0 }\n      })\n    }\n\n    if (this.isSourcesContent()) this.setSourcesContent()\n    if (this.root && this.previous().length > 0) this.applyPrevMaps()\n    if (this.isAnnotation()) this.addAnnotation()\n\n    if (this.isInline()) {\n      return [this.css]\n    } else {\n      return [this.css, this.map]\n    }\n  }\n\n  path(file) {\n    if (file.indexOf('<') === 0) return file\n    if (/^\\w+:\\/\\//.test(file)) return file\n    if (this.mapOpts.absolute) return file\n\n    let from = this.opts.to ? dirname(this.opts.to) : '.'\n\n    if (typeof this.mapOpts.annotation === 'string') {\n      from = dirname(resolve(from, this.mapOpts.annotation))\n    }\n\n    file = relative(from, file)\n    return file\n  }\n\n  toUrl(path) {\n    if (sep === '\\\\') {\n      path = path.replace(/\\\\/g, '/')\n    }\n    return encodeURI(path).replace(/[#?]/g, encodeURIComponent)\n  }\n\n  sourcePath(node) {\n    if (this.mapOpts.from) {\n      return this.toUrl(this.mapOpts.from)\n    } else if (this.mapOpts.absolute) {\n      if (pathToFileURL) {\n        return pathToFileURL(node.source.input.from).toString()\n      } else {\n        throw new Error(\n          '`map.absolute` option is not available in this PostCSS build'\n        )\n      }\n    } else {\n      return this.toUrl(this.path(node.source.input.from))\n    }\n  }\n\n  generateString() {\n    this.css = ''\n    this.map = new SourceMapGenerator({ file: this.outputFile() })\n\n    let line = 1\n    let column = 1\n\n    let noSource = '<no source>'\n    let mapping = {\n      source: '',\n      generated: { line: 0, column: 0 },\n      original: { line: 0, column: 0 }\n    }\n\n    let lines, last\n    this.stringify(this.root, (str, node, type) => {\n      this.css += str\n\n      if (node && type !== 'end') {\n        mapping.generated.line = line\n        mapping.generated.column = column - 1\n        if (node.source && node.source.start) {\n          mapping.source = this.sourcePath(node)\n          mapping.original.line = node.source.start.line\n          mapping.original.column = node.source.start.column - 1\n          this.map.addMapping(mapping)\n        } else {\n          mapping.source = noSource\n          mapping.original.line = 1\n          mapping.original.column = 0\n          this.map.addMapping(mapping)\n        }\n      }\n\n      lines = str.match(/\\n/g)\n      if (lines) {\n        line += lines.length\n        last = str.lastIndexOf('\\n')\n        column = str.length - last\n      } else {\n        column += str.length\n      }\n\n      if (node && type !== 'start') {\n        let p = node.parent || { raws: {} }\n        if (node.type !== 'decl' || node !== p.last || p.raws.semicolon) {\n          if (node.source && node.source.end) {\n            mapping.source = this.sourcePath(node)\n            mapping.original.line = node.source.end.line\n            mapping.original.column = node.source.end.column - 1\n            mapping.generated.line = line\n            mapping.generated.column = column - 2\n            this.map.addMapping(mapping)\n          } else {\n            mapping.source = noSource\n            mapping.original.line = 1\n            mapping.original.column = 0\n            mapping.generated.line = line\n            mapping.generated.column = column - 1\n            this.map.addMapping(mapping)\n          }\n        }\n      }\n    })\n  }\n\n  generate() {\n    this.clearAnnotation()\n    if (pathAvailable && sourceMapAvailable && this.isMap()) {\n      return this.generateMap()\n    } else {\n      let result = ''\n      this.stringify(this.root, i => {\n        result += i\n      })\n      return [result]\n    }\n  }\n}\n\nmodule.exports = MapGenerator\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}